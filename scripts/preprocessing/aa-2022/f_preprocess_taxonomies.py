import pandas as pd

import usfhn.constants
import usfhn.utils


def rename_aa_taxonomies(df):
    """
    The dataframe should have a column called 'Taxonomy'.

    We do some slight cleaning of names to AA's taxonomies, and this is where we
    do it.

    We also will drop duplicates generated by renaming if the original dataframe
    had not duplicates
    """
    renames = pd.read_csv(usfhn.constants.AA_TAXONOMY_RENAMES_PATH)
    rename_dict = renames.set_index('Taxonomy')['RenamedTaxonomy'].to_dict()

    # if there are no duplicates before, drop duplicates after
    duplicates_before_cleaning = df[df.duplicated()]

    df['Taxonomy'] = df['Taxonomy'].apply(lambda t: rename_dict.get(t, t))

    if not len(duplicates_before_cleaning):
        df = df.drop_duplicates()

    return df


def filter_various_taxonomies(df):
    pre_filter_department_ids = set(df['DepartmentId'])

    various_taxonomies = {t for t in df['Taxonomy'] if t.endswith('various')}

    df['TaxonomyCount'] = df.groupby('DepartmentId')['Taxonomy'].transform('nunique')

    # Whenever a department is in any other taxonomy than a various one, remove
    # it from the various.
    df['VariousTaxonomyCount'] = df.groupby('DepartmentId')['Taxonomy'].transform(
        lambda ts: len(set(ts) & various_taxonomies)
    )

    df['NonvariousTaxonomyCount'] = df['TaxonomyCount'] - df['VariousTaxonomyCount']

    various_df = df[
        df['NonvariousTaxonomyCount'] == 0
    ].copy()

    df = df[
        (df['NonvariousTaxonomyCount'] > 0)
        &
        (~df['Taxonomy'].isin(various_taxonomies))
    ]

    df = pd.concat([df, various_df])[
        ['DepartmentId', 'DepartmentName', 'InstitutionId', 'Taxonomy']
    ]

    post_filter_department_ids = set(df['DepartmentId'])
    assert(post_filter_department_ids == pre_filter_department_ids)
    return df


if __name__ == '__main__':
    """
    We are going to clean Department taxonomies. There are a couple steps.

    NOTE: this is done on the _unfiltered_ employment, for maximum coverage.

    1. Rename the taxonomies
    2. Remove the 'various' taxonomy from a department if it has other taxonomies

    We're going to return this so that we can annotate the Field/Area/Umbrella

    3. write this to: constants.AA_ANALYSIS_DEPARTMENTS_PATH

    df columns:
    - DepartmentId: Int
    - DepartmentName: String
    - InstitutionId: Int
    - Taxonomy: String (this is AA's taxonomy, and is string-cleaned)
    """
    usfhn.utils.print_cleaning_step_start("Taxonomy Preprocessing")
    df = pd.read_csv(usfhn.constants.AA_2022_DEPARTMENT_CLEANED_EMPLOYMENT_V2_PATH)[
        [
            'DepartmentId',
            'DepartmentName',
            'InstitutionId',
            'Taxonomy',
        ]
    ].drop_duplicates()

    starting_taxonomies = df['Taxonomy'].nunique()

    print(f"starting with {starting_taxonomies} taxonomies")

    df = rename_aa_taxonomies(df)
    post_rename_taxonomies = df['Taxonomy'].nunique()
    print(f"after renaming, there are {post_rename_taxonomies} taxonomies")

    df = filter_various_taxonomies(df)
    post_filtering_various_taxonomies = df['Taxonomy'].nunique()
    print(f"after filtering 'Various' taxonomies, there are {post_rename_taxonomies} taxonomies")

    df['Taxonomy'] = df['Taxonomy'].apply(usfhn.utils.rename_general_taxonomy)
    post_renaming_general_taxonomies = df['Taxonomy'].nunique()
    print(f"after renaming 'General' taxonomies, there are {post_renaming_general_taxonomies} taxonomies")

    df.to_csv(
        usfhn.constants.AA_2022_TAXONOMY_CLEANED_DEPARTMENTS_PATH,
        index=False,
    )

    df = pd.read_csv(usfhn.constants.AA_2022_DEPARTMENT_CLEANED_EMPLOYMENT_V2_PATH)
    df = df.drop(columns=[
        'Taxonomy',
    ]).drop_duplicates()

    df.to_csv(
        usfhn.constants.AA_2022_TAXONOMY_CLEANED_EMPLOYMENT_PATH,
        index=False,
    )
